.TH "src/exec/exec-utils.c" 3 "Minishell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/exec/exec-utils.c
.SH SYNOPSIS
.br
.PP
\fR#include 'garbage\&.h'\fP
.br
\fR#include 'minishell\&.h'\fP
.br
\fR#include <sys/types\&.h>\fP
.br
\fR#include <sys/wait\&.h>\fP
.br
\fR#include <unistd\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "size_t \fBcount_commands\fP (\fBt_command\fP *command)"
.br
.RI "Cound the number of commands in the command structure\&. "
.ti -1c
.RI "int \fBsafe_close\fP (int *fd)"
.br
.RI "Safely close fd\&. "
.ti -1c
.RI "void \fBdup_and_close\fP (\fBt_garbage\fP *garbage, int oldfd, int newfd)"
.br
.RI "Special dup2 that also closes the old fd\&. "
.ti -1c
.RI "int \fBneeds_to_be_forked\fP (\fBt_command\fP *command)"
.br
.RI "Check if it needs to be forked\&. "
.in -1c
.SH "Function Documentation"
.PP 
.SS "size_t count_commands (\fBt_command\fP * command)"

.PP
Cound the number of commands in the command structure\&. 
.PP
\fBParameters\fP
.RS 4
\fIcommand\fP command structure 
.RE
.PP
\fBReturns\fP
.RS 4
size_t number of commands 
.RE
.PP

.SS "void dup_and_close (\fBt_garbage\fP * garbage, int oldfd, int newfd)"

.PP
Special dup2 that also closes the old fd\&. 
.PP
\fBParameters\fP
.RS 4
\fIoldfd\fP fd that will overwrite newfd and will be close 
.br
\fInewfd\fP fd to overwrite by oldfd 
.RE
.PP

.SS "int needs_to_be_forked (\fBt_command\fP * command)"

.PP
Check if it needs to be forked\&. 
.PP
\fBParameters\fP
.RS 4
\fIcommand\fP command structure 
.RE
.PP
\fBReturns\fP
.RS 4
int 0 NO, 1 YES 
.RE
.PP

.SS "int safe_close (int * fd)"

.PP
Safely close fd\&. 
.PP
\fBParameters\fP
.RS 4
\fIfd\fP file descriptor to close 
.RE
.PP
\fBReturns\fP
.RS 4
0 no error, 1 ERROR 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Minishell from the source code\&.
