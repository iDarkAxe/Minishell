.TH "src/builtins/ft_exit.c" 3 "Minishell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/builtins/ft_exit.c
.SH SYNOPSIS
.br
.PP
\fR#include 'garbage\&.h'\fP
.br
\fR#include 'libft\&.h'\fP
.br
\fR#include 'minishell\&.h'\fP
.br
\fR#include <stdlib\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBft_exit\fP (\fBt_data\fP *data, char **array)"
.br
.RI "Function to exit the program\&. "
.ti -1c
.RI "void \fBft_exit_int\fP (\fBt_garbage\fP *garbage, int value)"
.br
.ti -1c
.RI "void \fBft_exit_int_np\fP (\fBt_garbage\fP *garbage, int value)"
.br
.ti -1c
.RI "\fB__attribute__\fP ((noreturn))"
.br
.RI "Short ft_exit that uses only int noreturn attribute is to prevent -Wmissing-noreturn flag from flag -Weverything of debug-cc\&. "
.in -1c
.SH "Function Documentation"
.PP 
.SS "__attribute__ ((noreturn) )"

.PP
Short ft_exit that uses only int noreturn attribute is to prevent -Wmissing-noreturn flag from flag -Weverything of debug-cc\&. Short ft_exit that uses only int but don't say it's name\&.

.PP
\fBParameters\fP
.RS 4
\fIvalue\fP value 
.RE
.PP

.SS "int ft_exit (\fBt_data\fP * data, char ** array)"

.PP
Function to exit the program\&. 
.PP
\fBParameters\fP
.RS 4
\fIarray\fP argument of the exit function 
.RE
.PP
\fBReturns\fP
.RS 4
int value if argument invalid 
.RE
.PP

.SS "void ft_exit_int (\fBt_garbage\fP * garbage, int value)"

.SS "void ft_exit_int_np (\fBt_garbage\fP * garbage, int value)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Minishell from the source code\&.
