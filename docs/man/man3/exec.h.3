.TH "inc/exec.h" 3 "Minishell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inc/exec.h
.SH SYNOPSIS
.br
.PP
\fR#include 'data_structure\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "char ** \fBcopy_toks\fP (\fBt_data\fP *data, \fBt_command\fP *command)"
.br
.RI "Creates a copy of all tokens that are in a command structure It's used for forks during exec\&. "
.ti -1c
.RI "int \fBprepare_command\fP (\fBt_data\fP *data)"
.br
.RI "Prepare the command for \fBsearch_command()\fP "
.ti -1c
.RI "int \fBprepare_command_forks\fP (\fBt_data\fP *data)"
.br
.ti -1c
.RI "int \fBsearch_command\fP (\fBt_data\fP *data, \fBt_command\fP *command, char **tokens)"
.br
.RI "Search if command is a builtin or not\&. "
.ti -1c
.RI "int \fBnot_builtins\fP (\fBt_data\fP *data, \fBt_command\fP *command, char **tokens)"
.br
.RI "Executes commands that are not builtins\&. "
.ti -1c
.RI "int \fBhandle_redirections\fP (\fBt_garbage\fP *garbage, \fBt_command\fP *command, int fd_backup[2])"
.br
.RI "Create and redirect inputs and outputs needed for the command\&. "
.ti -1c
.RI "void \fBreset_redirection\fP (\fBt_garbage\fP *garbage, \fBt_command\fP *command, int fd_backup[2], unsigned char i)"
.br
.RI "Reset redirections by default values Replace the new redirections by stdin and stdout\&. "
.ti -1c
.RI "int \fBneeds_to_be_forked\fP (\fBt_command\fP *command)"
.br
.RI "Check if it needs to be forked\&. "
.ti -1c
.RI "int \fBexecve_fork\fP (\fBt_data\fP *data, char *path, char **toks, char **envp)"
.br
.ti -1c
.RI "int \fBhandle_redirections_forks\fP (\fBt_garbage\fP *garbage, \fBt_command\fP *command)"
.br
.RI "Create and redirect inputs and outputs needed for the command\&. "
.ti -1c
.RI "size_t \fBcount_commands\fP (\fBt_command\fP *command)"
.br
.RI "Cound the number of commands in the command structure\&. "
.ti -1c
.RI "int \fBsafe_close\fP (int *fd)"
.br
.RI "Safely close fd\&. "
.ti -1c
.RI "void \fBdup_and_close\fP (\fBt_garbage\fP *garbage, int oldfd, int newfd)"
.br
.RI "Special dup2 that also closes the old fd\&. "
.ti -1c
.RI "void \fBexecute_pipeline\fP (\fBt_data\fP *data, pid_t *pids, size_t *count)"
.br
.RI "Execute all the command that are followed by pipes\&. "
.ti -1c
.RI "void \fBfill_toks_into_commands\fP (\fBt_data\fP *data, \fBt_command\fP *command)"
.br
.ti -1c
.RI "void \fBsearch_path\fP (\fBt_data\fP *data, \fBt_command\fP *command)"
.br
.RI "Search path for the designated command\&. "
.ti -1c
.RI "void \fBsearch_paths\fP (\fBt_data\fP *data, \fBt_command\fP *command)"
.br
.RI "Search Path for all commands\&. "
.ti -1c
.RI "void \fBwait_all_childs\fP (\fBt_command\fP *command, pid_t *pids)"
.br
.RI "Waits for all the childs with their pids\&. "
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Minishell from the source code\&.
