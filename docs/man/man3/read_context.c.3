.TH "src/read_context.c" 3 "Minishell" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/read_context.c
.SH SYNOPSIS
.br
.PP
\fR#include 'builtins\&.h'\fP
.br
\fR#include 'exec\&.h'\fP
.br
\fR#include 'file\&.h'\fP
.br
\fR#include 'garbage\&.h'\fP
.br
\fR#include 'get_next_line\&.h'\fP
.br
\fR#include 'minishell\&.h'\fP
.br
\fR#include <stdio\&.h>\fP
.br
\fR#include <unistd\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBis_interactive\fP (void)"
.br
.RI "Function to read the context where this function is called Verify if it's used in a tty or not,\&. "
.ti -1c
.RI "int \fBshort_minishell_no_tty\fP (\fBt_data\fP *data)"
.br
.RI "Executes the shell in a restricted area where there is no prompt Should work exactly as the minishell function\&. "
.in -1c
.SH "Function Documentation"
.PP 
.SS "int is_interactive (void )"

.PP
Function to read the context where this function is called Verify if it's used in a tty or not,\&. 
.PP
\fBReturns\fP
.RS 4
int 0 OK, 1 otherwise 
.RE
.PP

.SS "int short_minishell_no_tty (\fBt_data\fP * data)"

.PP
Executes the shell in a restricted area where there is no prompt Should work exactly as the minishell function\&. 
.PP
\fBParameters\fP
.RS 4
\fIdata\fP data structure already set 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Minishell from the source code\&.
